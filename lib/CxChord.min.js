var CxChord;if(typeof window==="undefined"){global._=require("lodash")}var __extends=this&&this.__extends||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)};(function(CxChord){var BarDataSet=function(){function BarDataSet(labels){this.labels=labels;this._options={scales:{xAxes:[{barPercentage:.5}],yAxes:[{type:"linear",display:true,position:"left",id:"y-axis-1"}]},responsive:true,legend:{display:true,position:"top"},title:{display:true,text:"Top Hypothesis"}};this._options2={scaleBeginAtZero:true,scaleShowGridLines:true,scaleGridLineColor:"rgba(0,0,0,.05)",scaleGridLineWidth:1,barShowStroke:true,barStrokeWidth:2,barValueSpacing:5,barDatasetSpacing:1,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'};this.barData={labels:this.labels,datasets:[]}}BarDataSet.prototype.setLabels=function(labels){this.labels=labels};BarDataSet.prototype.addDataSet=function(label,rgb,data){this.barData.datasets.push({label:label,fillColor:"rgba("+rgb+",0.5)",strokeColor:"rgba("+rgb+",0.8)",highlightFill:"rgba("+rgb+",0.75)",highlightStroke:"rgba("+rgb+",1)",data:data})};return BarDataSet}();CxChord.BarDataSet=BarDataSet;var BayesChart=function(_super){__extends(BayesChart,_super);function BayesChart(htmlElement,labels){if(htmlElement===void 0){htmlElement="visualization"}if(labels===void 0){labels=[]}var _this=_super.call(this,labels)||this;try{document.getElementById(htmlElement).innerHTML="&nbsp;";_this.canvas=document.getElementById(htmlElement);_this.ctx=_this.canvas.getContext("2d")}catch(e){throw Error("BayesChart: No Visualization HtmlElement "+htmlElement+" found.")}return _this}BayesChart.prototype.showChart=function(){try{this.barChart=new Chart(this.ctx).Bar(this.barData,this._options);document.getElementById("legend").innerHTML=this.barChart.generateLegend()}catch(e){throw Error("BayesChart.showChart: Failed to show Chart element.")}};return BayesChart}(BarDataSet);CxChord.BayesChart=BayesChart})(CxChord||(CxChord={}));(function(CxChord){CxChord.rootNoteNames={sharp:["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],flat:["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"]};CxChord.noteNames=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B","c","c#","d","d#","e","f","f#","g","g#","a","a#","b","C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B","c","db","d","eb","e","f","gb","g","ab","a","bb","b"];function getNoteNumber(note){var octave=5;var _oct=note.replace(/^[A-Ga-g]+[#b]*/,"");if(!_.isEmpty(_oct)){var _octave=_oct.replace(/[^0-9]+/g,"");if(_octave.match(/^[0-9]0{0,1}/))octave=parseInt(_octave);else throw Error("getNoteNumber: Illegal octave number. Legal octaves are 0-10")}var noteName=note.replace(/[0-9]/g,"");var noteNum=CxChord.noteNames.indexOf(noteName)%12;if(noteNum<0)throw Error("getNoteNumber: Unknown note name");else return noteNum+octave*12}CxChord.getNoteNumber=getNoteNumber;function getNoteName(note,flatOrSharp){if(note===void 0){note=0}if(flatOrSharp===void 0){flatOrSharp="flat"}note=note%12;var noteName=CxChord.rootNoteNames[flatOrSharp][Math.abs(note<0?note+12:note)%12];return noteName}CxChord.getNoteName=getNoteName;function getExtName(nameWithCommas){var extName=nameWithCommas.replace(/,/g,"").replace(/-1/g,"-no-root").replace(/-5/g,"-no-fifth");return extName}CxChord.getExtName=getExtName;function getChordName(nameWithCommas,root,bass,flatOrSharp){if(root===void 0){root=0}if(bass===void 0){bass=255}if(flatOrSharp===void 0){flatOrSharp="flat"}var chordName=CxChord.getNoteName(root,flatOrSharp);var extName=CxChord.getExtName(nameWithCommas);chordName+=extName;console.log("chordName(1):'"+chordName+"'");var group=_.isUndefined(CxChord.chordMap[nameWithCommas])?2:CxChord.chordMap[nameWithCommas].group;bass=bass==255?root:bass;if(bass!==root&&group!=CxChord.GR.rootLess){var bassName=CxChord.getNoteName(bass,flatOrSharp);chordName+="/"+bassName}return chordName}CxChord.getChordName=getChordName;function isNoRootChord(chordSym){return _.isUndefined(chordSym)?false:chordSym.indexOf("-1")>0}CxChord.isNoRootChord=isNoRootChord;function getKnockouts(key){var _key=key;if(_.isUndefined(CxChord.knockouts[_key])){_key=_key.split(",")[0]}return _.isUndefined(CxChord.knockouts[_key])?[]:CxChord.knockouts[_key]}CxChord.getKnockouts=getKnockouts;var GR;(function(GR){GR[GR["shell"]=1]="shell";GR[GR["standard"]=2]="standard";GR[GR["altered"]=4]="altered";GR[GR["extented"]=8]="extented";GR[GR["rootLess"]=16]="rootLess";GR[GR["reduced"]=32]="reduced";GR[GR["cluster"]=64]="cluster";GR[GR["passing"]=128]="passing"})(GR=CxChord.GR||(CxChord.GR={}));CxChord.chordMap={Maj:{notes:[0,4,7],root:0,inv:0,group:GR.standard},"Maj,7":{notes:[0,4,7,11],root:0,inv:0,group:GR.standard},"Maj,7,9":{notes:[0,4,7,11,14],root:0,inv:0,group:GR.extented},"Maj,7,9,#11":{notes:[0,4,7,11,14,18],root:0,inv:0,group:GR.extented},"Maj,7,9,#11,13":{notes:[0,4,7,11,14,18,21],root:0,inv:0,group:GR.extented},"Maj,6":{notes:[0,4,7,9],root:0,inv:0,group:GR.standard},"Maj,6,9":{notes:[0,4,7,9,14],root:0,inv:0,group:GR.extented},"Maj,add2":{notes:[0,2,4,7],root:0,inv:0,group:GR.cluster},"Maj,add9":{notes:[0,4,7,14],root:0,inv:0,group:GR.extented},5:{notes:[0,7],root:0,inv:0,group:GR.shell},Min:{notes:[0,3,7],root:0,inv:0,group:GR.standard},"Min,7":{notes:[0,3,7,10],root:0,inv:0,group:GR.standard},"Min,7,9":{notes:[0,3,7,10],root:0,inv:0,group:GR.altered},"Min,7,b5":{notes:[0,3,6,10],root:0,inv:0,group:GR.standard},"Min,6":{notes:[0,3,7,9],root:0,inv:0,group:GR.standard},"Min,6,9":{notes:[0,3,7,9,14],root:0,inv:0,group:GR.extented},"Min,M7":{notes:[0,3,7,11],root:0,inv:0,group:GR.standard},"Dom,7":{notes:[0,4,7,10],root:0,inv:0,group:GR.altered},"Dom,7,9":{notes:[0,4,7,10,14],root:0,inv:0,group:GR.extented},"Dom,7,#5":{notes:[0,4,8,10],root:0,inv:0,group:GR.altered},"Dom,7,b5":{notes:[0,4,6,10],root:0,inv:0,group:GR.altered},"Dom,7,sus4":{notes:[0,5,7,10],root:0,inv:0,group:GR.altered},"Dom,7,sus2":{notes:[0,2,7,10],root:0,inv:0,group:GR.altered},Dim:{notes:[0,3,6],root:0,inv:0,group:GR.passing},"Dim,7":{notes:[0,3,6,9],root:0,inv:0,group:GR.passing},"Dim,7(HW)":{notes:[0,3,6,9],root:0,inv:0,group:GR.passing},"Dim,7(WH)":{notes:[0,3,6,9],root:0,inv:0,group:GR.passing},"Maj,#5":{notes:[0,4,8],root:0,inv:0,group:GR.altered},Sus2:{notes:[0,2,7],root:0,inv:0,group:GR.altered},Sus4:{notes:[0,5,7],root:0,inv:0,group:GR.altered},"Maj,7,-5":{notes:[0,4,11],root:0,inv:0,group:GR.reduced},"Maj,6,-5":{notes:[0,4,9],root:0,inv:0,group:GR.reduced},"Min,6,-5":{notes:[0,3,9],root:0,inv:0,group:GR.reduced},"Min,7,-5":{notes:[0,3,10],root:0,inv:0,group:GR.reduced},"Maj,6,9,-1(A)":{notes:[0,3,5,10],root:-4,inv:0,group:GR.rootLess},"Maj,6,9,-1(B)":{notes:[0,5,7,10],root:-9,inv:0,group:GR.rootLess},"Maj,7,9,-1(A)":{notes:[0,3,7,10],root:-4,inv:0,group:GR.rootLess},"Maj,7,9,-1(B)":{notes:[0,3,5,8],root:-11,inv:0,group:GR.rootLess},"Min,6,9,-1(A)":{notes:[0,4,6,11],root:-3,inv:0,group:GR.rootLess},"Min,7,9,-1(A)":{notes:[0,4,7,11],root:-3,inv:0,group:GR.rootLess},"Min,7,9,-1(B)":{notes:[0,4,5,9],root:-10,inv:0,group:GR.rootLess},"Dom,7,9,-1(A)":{notes:[0,4,6,11],root:-10,inv:0,group:GR.rootLess},"Dom,7,9,-1(B)":{notes:[0,5,6,10],root:-4,inv:0,group:GR.rootLess},"Dom,7,b9,b13,-1(A)":{notes:[0,5,6,10],root:-4,inv:0,group:GR.rootLess},"Dom,7,b9,b13,-1(B)":{notes:[0,4,6,9],root:-4,inv:0,group:GR.rootLess},"Dom,7,b9,-1":{notes:[0,3,6,9],root:-4,inv:0,group:GR.rootLess},"Dom,7,#9,-1":{notes:[0,3,6,11],root:-4,inv:0,group:GR.rootLess}};CxChord.extensions={Maj:[14,18,21],"Maj,7":[14,18,21],Min:[14,17,21,13,18],"Min,M7":[14,17,21,18],"Maj,#5":[14,18],"Dom,7":[13,14,18,21],"Dom,7,#5":[13,14,15,18,19],"Dom,7,b5":[13,14,15,19,20,21]};CxChord.mustHave={Maj:[4],"Maj,7":[4,11],"Maj,7,9":[4,11],"Maj,7,9,#11":[4,11],"Maj,7,9,#11,13":[4,11],"Maj,6":[4,9],"Maj,6,9":[4,9],"Maj,6,9,-1":[4,9],"Maj,add2":[2,4],"Maj,add9":[4,14],"Maj,#5":[0,4,8],Sus2:[0,2,7],Sus4:[0,5,7],Min:[3],"Min,6":[3,9],"Min,6,9":[3,9],"Min,6,9,-1":[3,9],"Min,7":[3,10],"Min,7,9":[3,10],"Min,7,9,-1":[3,10],"Min,7,b5":[3,6,10],"Min,M7":[3,11],"Dom,7":[4,10],"Dom,7,9":[4,10],"Dom,7,#5":[4,8,10],"Dom,7,b5":[4,6,10],"Dom,7,sus4":[5,10],"Dom,7,sus2":[2,10],Dim:[0,3,6],"Dim,7(WH)":[0,3,6,9],"Dim,7(HW)":[0,3,6,9],"Dom,7,9,-1":[4,10],"Dom,7,b9,-1":[4,10],"Dom,7,#9,-1":[4,10],"Dom,7,9,13,-1,-5":[4,10,21]};CxChord.conflicts={"Maj,#5":[[7,8]],Min:[[5,6],[7,8]],"Min,6":[[5,6],[7,8]],"Min,6,9":[[5,6],[7,8]],"Min,6,9,-1":[[5,6],[7,8]],"Min,7":[[5,6],[7,8]],"Min,7,9":[[5,6],[7,8]],"Min,7,9,-1":[[5,6],[7,8]],"Min,7,b5":[[5,6],[7,8]],"Min,M7":[[5,6],[7,8]]};CxChord.knockouts={Maj:[1,3,5,8,10],"Maj,7":[1,3,5,8,10],"Maj,7,9":[1,3,5,8,10],"Maj,7,9,#11":[1,3,5,8,10],"Maj,7,9,#11,13":[1,3,5,8,10],"Maj,6":[1,3,5,8,10],"Maj,6,9":[1,3,5,8,10],"Maj,7,b5":[1,3,5,7,8,10],"Maj,add2":[1,3,5,8,10,11,14],"Maj,add9":[1,3,5,8,9,10,11],"Maj,#5":[1,3,5,7,10],5:[1,2,3,4,5,6,8,9,10,11],Min:[1,4,6,8,11],"Min,6":[1,4,6,8],"Min,6,9":[1,4,6,8],"Min,7":[1,4,6,8,11],"Min,7,9":[1,4,6,8,11],"Min,7,b5":[4,7,8,11],"Min,M7":[1,4,6,8,10],"MinCluster,7,9,-1":[1,4,8],Dim:[4,7,9,10,11],"Dim,7":[1,2,4,5,7,8,10,11],"Dim,7(HW)":[2,5,8,11],"Dim,7(WH)":[1,4,7,10],"Dom,7":[5,11],"Dom,7,#5":[5,11],"Dom,7,sus4":[4,11],"Dom,7,b5":[5,7,11],Sus2:[1,3,4,5,8],Sus4:[1,3,4,6,8],"Maj,7,-5":[1,3,5,6,7,8,10],"Maj,6,-5":[1,3,5,6,7,8,10],"Min,6,-5":[1,4,6,7,8],"Min,7,-5":[1,4,6,7,8,11],"Maj,6,9,-1(A)":[0,1,3,5,6,8,10],"Maj,6,9,-1(B)":[0,1,3,5,6,8,10],"Maj,7,9,-1(A)":[0,1,3,5,6,8,10],"Maj,7,9,-1(B)":[0,1,3,5,6,8,10],"Maj,7,9,-1":[0,1,3,5,6,8,10],"Min,6,9,-1(A)":[0,4,6,8,10,11],"Min,6,9,-1(B)":[0,4,6,8,10,11],"Min,7,9,-1(A)":[0,4,6,8,11],"Min,7,9,-1(B)":[0,4,6,8,11],"Min,6,9,-1":[1,4,8],"Min,7,9,-1":[1,4,8],"Dom,7,9,-1(A)":[0,1,3,5,8,11],"Dom,7,9,-1(B)":[0,1,3,5,8,11],"Dom,7,b9,b13,-1(A)":[0,2,5,8,11],"Dom,7,b9,b13,-1(B)":[0,2,5,8,11],"Dom,7,9,13,-1,-5":[0,5,7,11],"Dom,7,9,-1":[0,5,7,11],"Dom,7,b9,-1":[0,5,7,11],"Dom,7,#9,-1":[0,5,7,11]};var ChordForms=function(){function ChordForms(){this.chordMapWithInv={};this.buildInversions()}ChordForms.prototype.getInvariants=function(chordName){var invariants;if(_.has(CxChord.chordMap,chordName)){var chord=_.get(CxChord.chordMap,chordName);_.forIn(CxChord.chordMap,function(value,key){if(key!==chordName&&_.isEqual(value.notes,chord.notes)){invariants.push(key)}})}return invariants};ChordForms.prototype.buildInversions=function(){var mapWithInv=this.chordMapWithInv;_.forIn(CxChord.chordMap,function(value,key){mapWithInv[key]=[];var chord=new CxChord.ChordInstance(value.notes);var interval=chord.getInversion(0);for(var i=0;i<value.notes.length;i++){var _notes=chord.getInversion(i);var rootNote=-(Math.abs(value.root)+interval[i])%12;mapWithInv[key].push({notes:_notes,root:rootNote==-0?0:rootNote,inv:i,group:value.group})}})};return ChordForms}();CxChord.ChordForms=ChordForms})(CxChord||(CxChord={}));(function(CxChord){var Scale_Type;(function(Scale_Type){Scale_Type[Scale_Type["major"]=1]="major";Scale_Type[Scale_Type["minor"]=2]="minor";Scale_Type[Scale_Type["altered"]=4]="altered";Scale_Type[Scale_Type["dominant"]=8]="dominant";Scale_Type[Scale_Type["dimished"]=16]="dimished";Scale_Type[Scale_Type["wholeTone"]=32]="wholeTone"})(Scale_Type=CxChord.Scale_Type||(CxChord.Scale_Type={}));CxChord.scaleMap={Ionian:{notes:[0,2,4,5,7,9,11],major:0,minor:-3,group:Scale_Type.major},Dorian:{notes:[0,2,3,5,7,9,10],major:3,minor:0,group:Scale_Type.minor},Phygian:{notes:[0,1,3,5,7,8,10],major:3,minor:0,group:Scale_Type.minor},Lydian:{notes:[0,2,4,5,7,9,11],major:0,minor:-3,group:Scale_Type.major},Mixolydian:{notes:[0,2,4,5,7,9,11],major:0,minor:-3,group:Scale_Type.dominant},Aeolian:{notes:[0,2,3,5,7,8,10],major:0,minor:3,group:Scale_Type.minor},Locrian:{notes:[0,1,3,5,6,8,10],major:0,minor:null,group:Scale_Type.dimished},HarmonicMinor:{notes:[0,2,3,5,7,8,11],major:0,minor:null,group:Scale_Type.minor},MelodicMinor:{notes:[0,2,3,5,7,9,11],major:0,minor:null,group:Scale_Type.minor},WholeTone:{notes:[0,2,4,6,8,10],major:0,minor:null,group:Scale_Type.minor}};var Chord_Type;(function(Chord_Type){Chord_Type[Chord_Type["major"]=0]="major";Chord_Type[Chord_Type["majorb5"]=1]="majorb5";Chord_Type[Chord_Type["majorAug"]=2]="majorAug";Chord_Type[Chord_Type["minor"]=3]="minor";Chord_Type[Chord_Type["minorb5"]=4]="minorb5";Chord_Type[Chord_Type["dominant"]=5]="dominant";Chord_Type[Chord_Type["dominantAlt"]=6]="dominantAlt";Chord_Type[Chord_Type["dimished"]=7]="dimished";Chord_Type[Chord_Type["halfDiminished"]=8]="halfDiminished"})(Chord_Type=CxChord.Chord_Type||(CxChord.Chord_Type={}))})(CxChord||(CxChord={}));(function(CxChord){var ChordInstance=function(){function ChordInstance(midiChord,normalizeChord){if(normalizeChord===void 0){normalizeChord=true}this.midiChord=midiChord;this.normalizeChord=normalizeChord;this.offset=[];this.chordInv=[];this.matchedNotes={};this.favorJazzChords=false;this.validate(midiChord);for(var i=0;i<midiChord.length;i++){this.offset.push(midiChord[i])}this.chordInv=this.invert(midiChord)}ChordInstance.prototype.addOffset=function(chord,offset){var res=[];for(var i=0;i<chord.length;i++){res.push(chord[i]+offset)}return res};ChordInstance.prototype.addRootOffset=function(chord,root){var offset=(root<0?12+root:root)%12;return this.normalize(this.addOffset(chord,offset))};ChordInstance.prototype.getOffset=function(inv){if(inv<0||inv>=this.offset.length)throw Error("getRootOffset inversion is out of range");else return this.offset[inv]};ChordInstance.prototype.getBassName=function(hypo,sharpOrFlat){if(sharpOrFlat===void 0){sharpOrFlat="flat"}var bass=this.offset[0]%12;var bassName=CxChord.rootNoteNames[sharpOrFlat][bass];return bassName};ChordInstance.prototype.getBassNumber=function(){return this.offset[0]};ChordInstance.prototype.getRootName=function(hypo,sharpOrFlat){if(sharpOrFlat===void 0){sharpOrFlat="flat"}var _offset=(this.offset[0]+hypo.root)%12;var root=_offset<0?_offset+12:_offset;var rootName=CxChord.rootNoteNames[sharpOrFlat][root];return rootName};ChordInstance.prototype.getInversion=function(inv){return _.isUndefined(this.chordInv[inv])?[]:this.chordInv[inv]};ChordInstance.prototype.validate=function(notes){if(notes.length==0){throw Error("No notes in notes array")}for(var i=0;i<notes.length;i++){if(notes[i]<0||notes[i]>127){throw Error("Illegal midi note value:"+notes[i])}}};ChordInstance.prototype.normalize=function(notes){var target=[];try{var offset=notes[0];for(var i=0;i<notes.length;i++){var note=notes[i]-offset;while(note>21)note-=12;target[i]=note}}catch(e){throw Error(e)}return target};ChordInstance.prototype.invert=function(notes){if(notes.length<2)throw Error("Cannot invert less than 2 notes");var target=[];target[0]=this.normalizeChord?this.normalize(notes):notes;this.offset[0]=notes[0];for(var d=1;d<notes.length;d++){var currNotes=_.drop(target[d-1]);var invNote=_.head(target[d-1]);invNote+=12;currNotes.push(invNote);target[d]=this.normalizeChord?this.normalize(currNotes):currNotes}if(target.length<notes.length)throw Error("Bad invertion");return target};return ChordInstance}();CxChord.ChordInstance=ChordInstance})(CxChord||(CxChord={}));var __extends=this&&this.__extends||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)};(function(CxChord){var ChordMatch=function(){function ChordMatch(hypo,chordEntry,mapEntry,sharpOrFlat){if(sharpOrFlat===void 0){sharpOrFlat="flat"}this.hypo=hypo;this.notes=[];this.inv=hypo.inv;this.type=hypo.key;for(var i=0;i<chordEntry.chordInv[0].length;i++){var note=chordEntry.chordInv[0][i]+chordEntry.offset[0];this.notes.push(note)}this.bass=chordEntry.getBassName(hypo,sharpOrFlat);this.root=chordEntry.getRootName(hypo,sharpOrFlat);this.list=this.root+","+this.hypo.key;if(this.bass!==this.root){this.list+=",/"+this.bass}this.chord=CxChord.getExtName(this.list)}return ChordMatch}();CxChord.ChordMatch=ChordMatch;var ChordMatcher=function(_super){__extends(ChordMatcher,_super);function ChordMatcher(debugKey){if(debugKey===void 0){debugKey="Maj"}var _this=_super.call(this)||this;_this.debugKey=debugKey;_this.favorJazzChords=false;_this.priorChords=[];return _this}ChordMatcher.prototype.getMatches=function(sharpOrFlat){if(sharpOrFlat===void 0){sharpOrFlat="flat"}var post=this.bayes.getPosterior();var res=[];for(var i=0;i<post.length;i++)if(i==0||post[i].post==post[i-1].post){var chordEntry=this.chord;var chordMapEntry=this.chordMapWithInv[post[i].hypo.key][post[i].hypo.inv];var entry=new ChordMatch(post[i].hypo,chordEntry,chordMapEntry,sharpOrFlat);res.push(entry)}else{break}return res};ChordMatcher.prototype.getMatch=function(idx,sharpOrFlat){if(idx===void 0){idx=0}if(sharpOrFlat===void 0){sharpOrFlat="flat"}var res=this.getMatches(sharpOrFlat);if(idx<0||idx>=res.length)throw Error("getMatch index: "+idx+" is out of range");else return res[idx]};ChordMatcher.prototype.getPosterior=function(){return this.bayes.getPosterior()};ChordMatcher.prototype.getChord=function(){return this.chord};ChordMatcher.prototype.favorJazz=function(favor){if(favor===void 0){favor=true}this.favorJazzChords=favor;if(!_.isUndefined(this.chord)){this.chord.favorJazzChords=favor}};ChordMatcher.prototype.addRootOffset=function(_arr,root,addOctave){if(_arr===void 0){_arr=[]}if(addOctave===void 0){addOctave=true}var arr=[];if(root==0){arr=_arr}else{for(var i=0;i<_arr.length;i++){var note=_arr[i]+root%12;note=note<0?note+12:note;arr.push(note)}}return _.sortedUniq(arr)};ChordMatcher.prototype.addToArray=function(_arr,value){var arr=[];for(var i=0;i<_arr.length;i++){arr.push(_arr[i]+value)}return arr};ChordMatcher.prototype.doMatch=function(chord,limit){if(limit===void 0){limit=chord.chordInv[0].length}var self=this;var extensions=CxChord.extensions;var knockouts=CxChord.knockouts;var mustHave=CxChord.mustHave;var conflicts=CxChord.conflicts;var rootNotes=CxChord.rootNoteNames;var idx=0;_.forIn(this.chordMapWithInv,function(hypothesis,key){idx++;for(var inv=0;inv<hypothesis.length;inv++){idx+=inv;if(!_.has(chord.matchedNotes,key)){chord.matchedNotes[key]={invertions:[],extensions:[],knockouts:[],mustHave:[],rootNotes:[],conflicts:[],roots:[],group:hypothesis[inv].group}}if(key==self.debugKey){var debugRoot=true}chord.matchedNotes[key].rootNotes.push(hypothesis[inv].root);var intersection=_.intersection(chord.chordInv[0],hypothesis[inv].notes);if(!_.isArray(intersection))throw Error("inversion Intersection is not an array");chord.matchedNotes[key].invertions.push(intersection);var hypoToMatch=[];var chordToMatch=[];var invRoot=(hypothesis[inv].root<0?12+hypothesis[inv].root:hypothesis[inv].root)%12;if(CxChord.isNoRootChord(key)&&hypothesis[inv].root<0){var tmpArr=[];tmpArr.push(invRoot);hypoToMatch=tmpArr.concat(hypothesis[inv].notes).sort();chordToMatch=chord.addRootOffset(chord.chordInv[0],hypothesis[inv].root)}else{hypoToMatch=hypothesis[inv].notes;chordToMatch=chord.chordInv[0]}var indexOfRoot=chordToMatch.indexOf(invRoot)>=0?chordToMatch.indexOf(invRoot):chordToMatch.indexOf(invRoot+12);chord.matchedNotes[key].roots.push(indexOfRoot);var mustHaveTrans;var mustHaveMatch;if(!_.isUndefined(mustHave[key])){mustHaveTrans=self.addRootOffset(mustHave[key],hypothesis[inv].root,false);mustHaveMatch=_.intersection(chordToMatch,mustHaveTrans);chord.matchedNotes[key].mustHave.push(mustHaveMatch.length-mustHaveTrans.length)}else chord.matchedNotes[key].mustHave.push(0);var extensionNotes=extensions[key];var remainingNotes=_.difference(chord.chordInv[0],intersection);var extensionMatch=_.intersection(remainingNotes,extensionNotes);chord.matchedNotes[key].extensions.push(extensionMatch);var knockoutTrans;var knockoutMatch;var KOs=CxChord.getKnockouts(key);if(KOs.length>0){knockoutTrans=self.addRootOffset(knockouts[key],hypothesis[inv].root);knockoutMatch=_.intersection(chord.chordInv[0],knockoutTrans)}chord.matchedNotes[key].knockouts.push(_.isUndefined(knockoutMatch)?[]:knockoutMatch);var conflictCount=0;var conflictTrans;var conflictLen=0;if(!_.isUndefined(conflicts[key])){for(var i=0;i<conflicts[key].length;i++){conflictTrans=self.addRootOffset(conflicts[key][i],hypothesis[inv].root);var conflictMatch=_.intersection(chordToMatch,conflictTrans);if(conflictMatch.length==conflictTrans.length){conflictCount+=1}conflictTrans=self.addToArray(conflictTrans,12);conflictMatch=_.intersection(chord.chordInv[0],conflictTrans);if(conflictMatch.length==conflictTrans.length){conflictCount+=1}}}chord.matchedNotes[key].conflicts.push(conflictCount)}});return chord};ChordMatcher.prototype.match=function(midiChord){if(_.isUndefined(midiChord)||_.isEmpty(midiChord))throw"match: supplied Chord is empty";else{if(_.isNumber(midiChord[0])){return this.matchNotes(midiChord)}else if(_.isString(midiChord[0])){return this.matchNoteNames(midiChord)}}};ChordMatcher.prototype.matchNoteNames=function(midiNames){var midiChord=[];for(var i=0;i<midiNames.length;i++)try{var noteNo=CxChord.getNoteNumber(midiNames[i]);midiChord.push(noteNo)}catch(e){throw e}return this.matchNotes(midiChord)};ChordMatcher.prototype.matchNotes=function(midiChord){this.bayes=new CxChord.BayesChordCalculator(this.chordMapWithInv);this.chord=new CxChord.ChordInstance(midiChord);this.chord.favorJazzChords=this.favorJazzChords;this.doMatch(this.chord);this.rules=new CxChord.Rules(this.chord,this.debugKey);var ruleE=this.rules.get("EvenDistribution");this.bayes.applyRule(ruleE);var ruleK=this.rules.get("Knockouts");this.bayes.applyRule(ruleK);var ruleM=this.rules.get("MatchedNotes");this.bayes.applyRule(ruleM);var ruleH=this.rules.get("MustHave");this.bayes.applyRule(ruleH);var ruleR=this.rules.get("RootFound");this.bayes.applyRule(ruleR);return this.chord};return ChordMatcher}(CxChord.ChordForms);CxChord.ChordMatcher=ChordMatcher})(CxChord||(CxChord={}));(function(CxChord){var Rules=function(){function Rules(_chord,debugKey){if(_chord===void 0){_chord=null}if(debugKey===void 0){debugKey="Maj"}this.debugKey=debugKey;this.ruleMap={};this.size=0;this.set("EvenDistribution",{chord:_chord,ruleFx:function(chord,bayes,row,col){var evenDistibution=1/bayes.hypothesis.length;return evenDistibution}});this.set("CountNotes",{chord:_chord,ruleFx:function(chord,bayes,row,col){var hypoLen=bayes.hypothesis[col].len;var chordLen=chord.chordInv[0].length;var score;if(hypoLen==chordLen)score=1;else if(hypoLen>chordLen)score=1/(hypoLen-chordLen)*2;else if(hypoLen<chordLen)score=1/(chordLen-hypoLen)*2;return score}});this.set("MustHave",{chord:_chord,ruleFx:function(chord,bayes,row,col){var key=bayes.hypothesis[col].key;var inv=bayes.hypothesis[col].inv;var mustHave=chord.matchedNotes[key].mustHave[inv];var score=1/(mustHave==0?1:Math.abs(mustHave)*2);return score}});this.set("Knockouts",{chord:_chord,ruleFx:function(chord,bayes,row,col){var key=bayes.hypothesis[col].key;var inv=bayes.hypothesis[col].inv;var knockouts=chord.matchedNotes[key].knockouts[inv].length;var score=1/(knockouts==0?1:knockouts*10);return score}});this.set("MatchedNotes",{chord:_chord,ruleFx:function(chord,bayes,row,col){var key=bayes.hypothesis[col].key;var inv=bayes.hypothesis[col].inv;var chordLen=chord.chordInv[0].length;var matches=chord.matchedNotes[key].invertions[inv].length;var missing=chordLen-matches;var missingTax=2;var score=matches/(bayes.hypothesis[col].len+missing*missingTax);return score}});this.set("RootFound",{chord:_chord,ruleFx:function(chord,bayes,row,col){var key=bayes.hypothesis[col].key;var inv=bayes.hypothesis[col].inv;var indexOfRoot=chord.matchedNotes[key].roots[inv];var favorJazz=chord.favorJazzChords;var score;var flavor=bayes.hypothesis[col].group;var jazzChord=flavor==CxChord.GR.rootLess;if(key==this.currKey){var debug=true}var inversionTax=.1*inv;inversionTax=inversionTax<1?inversionTax:.8;if(jazzChord){if(jazzChord&&!favorJazz){score=.2}else{score=indexOfRoot>=0?.2:1-inversionTax}}else if(indexOfRoot==0){score=favorJazz?.7:1}else if(indexOfRoot>0){score=favorJazz?.7-inversionTax:1-inversionTax}else{score=.6-inversionTax}return score}});this.set("FavorJazz",{chord:_chord,ruleFx:function(chord,bayes,row,col){var key=bayes.hypothesis[col].key;var flavor=bayes.hypothesis[col].group;var jazzChord=flavor==CxChord.GR.rootLess||flavor==CxChord.GR.reduced;if(key=="Maj,7,-5"){var debug=true}var score=jazzChord?1:.7;return score}});this.set("Conflicts",{chord:_chord,ruleFx:function(chord,bayes,row,col){var key=bayes.hypothesis[col].key;var inv=bayes.hypothesis[col].inv;var conflicts=chord.matchedNotes[key].conflicts[inv];var score=1/(conflicts==0?1:conflicts*10);return score}});this.set("ChordGroup",{chord:_chord,ruleFx:function(chord,bayes,row,col){var score=1/chord.matchedNotes[bayes.hypothesis[col].key].group;return score}})}Rules.prototype.get=function(key){return this.ruleMap[key]};Rules.prototype.has=function(key){return _.has(this.ruleMap,key)};Rules.prototype.set=function(key,value){value.rule=key;this.ruleMap[key]=value;this.size=_.keys(this.ruleMap).length;return this.ruleMap[key]};return Rules}();CxChord.Rules=Rules})(CxChord||(CxChord={}));(function(CxChord){var BayesChordCalculator=function(){function BayesChordCalculator(bayesChordMap){this.bayesChordMap=bayesChordMap;this.self=this;this.hypothesis=[];this.rules=[];this.likelyhoods=[];this.normalizingConst=[];this.posterior=[];this.chartsCount=0;this.randomColorFactor=function(){return Math.round(Math.random()*255)};this.createHypothesis()}BayesChordCalculator.prototype.createHypothesis=function(){var idx=0;var _self=this.self;for(var key in this.bayesChordMap){for(var inv=0;inv<this.bayesChordMap[key].length;inv++){_self.hypothesis.push({idx:idx++,key:key,inv:inv,group:this.bayesChordMap[key][inv].group,len:this.bayesChordMap[key][inv].notes.length,root:this.bayesChordMap[key][inv].root})}}};BayesChordCalculator.prototype.getChordMapNotes=function(idx){return this.bayesChordMap[this.hypothesis[idx].key][this.hypothesis[idx].inv].notes};BayesChordCalculator.prototype.standardDeriviation=function(data){var sum=_.sum(data);var avg=sum/data.length;var squaredDiffs=_.map(data,function(value){var diff=value-avg;return diff*diff});var avgSquaredDiff=_.sum(squaredDiffs)/squaredDiffs.length;var stdDev=Math.sqrt(avgSquaredDiff);return stdDev};BayesChordCalculator.prototype.applyRule=function(rule){var row=this.likelyhoods.length;var firstRow=row==0;var normalizingConst=0;this.rules.push(rule);if(_.isUndefined(this.likelyhoods[row]))this.likelyhoods[row]=[];for(var col=0;col<this.hypothesis.length;col++){var likelyhood=rule.ruleFx(rule.chord,this.self,row,col);this.likelyhoods[row].push(likelyhood);var prior=firstRow?1:this.posterior[row-1][col].post;normalizingConst+=prior*likelyhood}this.likelyhoods[row].push(normalizingConst);this.calcPosterior(row)};BayesChordCalculator.prototype.calcPosterior=function(_row){for(var row=_row<0?0:_row;row<this.likelyhoods.length;row++){var firstRow=row==0;var colIdx=this.likelyhoods[row].length-1;var normalizingConst=this.likelyhoods[row][colIdx];if(_.isUndefined(this.posterior[row]))this.posterior[row]=[];for(var col=0;col<this.hypothesis.length;col++){var prior=firstRow?1:this.posterior[row-1][col].post;var likelyhood=this.likelyhoods[row][col];var posterior=prior*likelyhood/(firstRow?1:normalizingConst);this.posterior[row].push({post:posterior,idx:col})}}};BayesChordCalculator.prototype.getPosteriorByRow=function(rowIdx){if(rowIdx<0||rowIdx>=this.posterior.length||_.isUndefined(this.posterior[rowIdx]))throw Error("getPosteriorByRow index: "+rowIdx+" is out of range or undefined");for(var col=0;col<this.hypothesis.length;col++){this.posterior[rowIdx][col].hypo=this.hypothesis[col]}return _.orderBy(this.posterior[rowIdx],["post","hypo.len","hypo.inv"],"desc")};BayesChordCalculator.prototype.getPosterior=function(){var lastRow=this.posterior.length-1;if(lastRow<0)return[];else return this.getPosteriorByRow(lastRow)};BayesChordCalculator.prototype.getHypothesis=function(posterior){return this.hypothesis[posterior.idx]};BayesChordCalculator.prototype.getHypothesisByIdx=function(idx){if(idx<0||idx>=this.hypothesis.length)throw Error("getHypothesisByIdx index: "+idx+" is out of range");return this.hypothesis[idx]};BayesChordCalculator.prototype.getBestPosterior=function(idx){if(idx===void 0){idx=0}var res=this.getPosterior();if(idx<0||idx>=res.length)throw Error("getBestPosterior index: "+idx+" is out of range");return res[idx]};BayesChordCalculator.prototype.normalize=function(posterior){var postArr=[];_.forEach(posterior,function(val){postArr.push(val.post)});var sum=_.sum(postArr);var checkSum=0;for(var i=0;i<postArr.length;i++){posterior[i].post=postArr[i]/sum;checkSum+=posterior[i].post}};BayesChordCalculator.prototype.getTopX=function(topX,row,normalize){if(topX===void 0){topX=10}if(row===void 0){row=this.posterior.length-1}if(normalize===void 0){normalize=true}var posterior=this.getPosteriorByRow(row);var postTopX=_.take(posterior,topX);if(normalize){this.normalize(postTopX)}return postTopX};BayesChordCalculator.prototype.getRandomIntInclusive=function(min,max){return Math.floor(Math.random()*(max-min+1))+min};BayesChordCalculator.prototype.visualizeTopX=function(title,chord,topX){if(topX===void 0){topX=10}var labels=[];var posteriorLastRow=this.getTopX(topX);var bayesChart;for(var i=0;i<posteriorLastRow.length;i++){var hypo=this.getHypothesis(posteriorLastRow[i]);var label=chord.getRootName(hypo)+hypo.key+"_i"+hypo.inv;labels.push(label)}bayesChart=new CxChord.BayesChart("visualization",labels);for(var dataSet=1;dataSet<this.posterior.length;dataSet++){var data=[];for(var i=0;i<posteriorLastRow.length;i++){var idx=posteriorLastRow[i].idx;var post=this.posterior[dataSet][idx].post;data.push(post)}var randomColor=this.randomColorFactor()+","+this.randomColorFactor()+","+this.randomColorFactor();bayesChart.addDataSet(this.rules[dataSet].rule,randomColor,data)}bayesChart.showChart()};BayesChordCalculator.prototype.visualizeForm=function(form,chord){var labels=[];var posteriorLastRow=this.getPosterior();var bayesChart;var lastRow=_.filter(posteriorLastRow,function(p){return p.hypo.key==form});var bestMatch=this.getBestPosterior();var bestHypo=this.getHypothesis(bestMatch);var bestLabel=chord.getRootName(bestHypo)+bestHypo.key+"_i"+bestHypo.inv;labels.push(bestLabel);for(var i=0;i<lastRow.length;i++){var hypo=this.getHypothesis(lastRow[i]);var label=chord.getRootName(hypo)+hypo.key+"_i"+hypo.inv;labels.push(label)}bayesChart=new CxChord.BayesChart("visualization",labels);for(var dataSet=1;dataSet<this.posterior.length;dataSet++){var data=[];var bestIdx=bestMatch.idx;var bestPost=this.posterior[dataSet][bestIdx].post;data.push(bestPost);for(var i=0;i<lastRow.length;i++){var idx=lastRow[i].idx;var post=this.posterior[dataSet][idx].post;data.push(post)}var randomColor=this.randomColorFactor()+","+this.randomColorFactor()+","+this.randomColorFactor();bayesChart.addDataSet(this.rules[dataSet].rule,randomColor,data)}bayesChart.showChart()};return BayesChordCalculator}();CxChord.BayesChordCalculator=BayesChordCalculator})(CxChord||(CxChord={}));if(typeof window==="undefined"){module.exports=CxChord}